{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/src/components/login/Sociallogin.js\";\n\nimport React, { Component } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport postData from '../postData';\n\nvar Sociallogin = function Sociallogin() {\n  signup = function signup(userToken, serviceProvider) {\n    var userData;\n\n    if (serviceProvider === 'google/') {\n      userData = {\n        user: {\n          access_token: userToken\n        }\n      };\n    }\n\n    if (userData) {\n      postData(serviceProvider, userData).then(function (result) {\n        console.log(result.data.user.access_token);\n        localStorage.setItem('token', result.data.user.access_token);\n\n        _this.setState({\n          redirect: true\n        });\n\n        console.log(result.status);\n        console.log(_this.props); // I shall use local storage fo the token\n      });\n    }\n  };\n\n  googleResponse = function googleResponse(response) {\n    var token = response.getAuthResponse().id_token;\n\n    _this.signup(token, 'google/');\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(GoogleLogin, {\n    clientId: \"1040550554735-0lfo665jrpgkprjkqdvh9njlc46mu6rg.apps.googleusercontent.com\",\n    buttonText: \"Login with Google\",\n    onSuccess: _this.googleResponse,\n    onFailure: _this.googleResponse,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }));\n};\n\nexport default Sociallogin;","map":{"version":3,"sources":["/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/src/components/login/Sociallogin.js"],"names":["React","Component","GoogleLogin","postData","Sociallogin","signup","userToken","serviceProvider","userData","user","access_token","then","result","console","log","data","localStorage","setItem","setState","redirect","status","props","googleResponse","response","token","getAuthResponse","id_token"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,QAAP,MAAqB,aAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExBC,EAAAA,MAAM,GAAG,gBAACC,SAAD,EAAYC,eAAZ,EAAgC;AACvC,QAAIC,QAAJ;;AACA,QAAID,eAAe,KAAK,SAAxB,EAAmC;AACjCC,MAAAA,QAAQ,GAAG;AACTC,QAAAA,IAAI,EAAE;AACJC,UAAAA,YAAY,EAAEJ;AADV;AADG,OAAX;AAKD;;AACD,QAAIE,QAAJ,EAAc;AACZL,MAAAA,QAAQ,CAACI,eAAD,EAAkBC,QAAlB,CAAR,CAAoCG,IAApC,CAAyC,UAACC,MAAD,EAAY;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAP,CAAYN,IAAZ,CAAiBC,YAA7B;AACAM,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,MAAM,CAACG,IAAP,CAAYN,IAAZ,CAAiBC,YAA/C;;AACA,QAAA,KAAI,CAACQ,QAAL,CAAc;AAACC,UAAAA,QAAQ,EAAE;AAAX,SAAd;;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACQ,MAAnB;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAI,CAACO,KAAjB,EALmD,CAMnD;AACD,OAPD;AAQD;AACF,GAnBD;;AAqBAC,EAAAA,cAAc,GAAG,wBAACC,QAAD,EAAc;AAC7B,QAAMC,KAAK,GAAGD,QAAQ,CAACE,eAAT,GAA2BC,QAAzC;;AACA,IAAA,KAAI,CAACrB,MAAL,CAAYmB,KAAZ,EAAmB,SAAnB;AACD,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAC,2EADX;AAEE,IAAA,UAAU,EAAC,mBAFb;AAGE,IAAA,SAAS,EAAE,KAAI,CAACF,cAHlB;AAIE,IAAA,SAAS,EAAE,KAAI,CAACA,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAtCD;;AAuCA,eAAelB,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport GoogleLogin from 'react-google-login';\nimport postData from '../postData';\n\nconst Sociallogin = () => {\n\n  signup = (userToken, serviceProvider) => {\n    let userData;\n    if (serviceProvider === 'google/') {\n      userData = {\n        user: {\n          access_token: userToken,\n        },\n      };\n    }\n    if (userData) {\n      postData(serviceProvider, userData).then((result) => {\n        console.log(result.data.user.access_token);\n        localStorage.setItem('token', result.data.user.access_token);\n        this.setState({redirect: true});\n        console.log(result.status);\n        console.log(this.props);\n        // I shall use local storage fo the token\n      });\n    }\n  }\n\n  googleResponse = (response) => {\n    const token = response.getAuthResponse().id_token;\n    this.signup(token, 'google/');\n  }\n\n  return (\n    <div>\n      <GoogleLogin\n        clientId=\"1040550554735-0lfo665jrpgkprjkqdvh9njlc46mu6rg.apps.googleusercontent.com\"\n        buttonText=\"Login with Google\"\n        onSuccess={this.googleResponse}\n        onFailure={this.googleResponse}\n      />\n    </div>\n  );\n};\nexport default Sociallogin;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/src/components/login/Google.js\";\nimport React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport PropTypes from 'prop-types';\nimport { googleLoginUser } from '../../actions/userActions';\n\nvar Googlelogin =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Googlelogin, _PureComponent);\n\n  function Googlelogin(props) {\n    var _this;\n\n    _classCallCheck(this, Googlelogin);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Googlelogin).call(this, props));\n\n    _this.signup = function (userToken, serviceProvider) {\n      var userData;\n\n      if (serviceProvider === '/api/auth/google/') {\n        userData = {\n          user: {\n            access_token: userToken\n          }\n        };\n      }\n\n      var googleLoginUser = _this.props.googleLoginUser; // console.log(loginUser(serviceProvider, userData));\n\n      googleLoginUser(serviceProvider, userData);\n    };\n\n    _this.googleResponse = function (response) {\n      var token = response.tokenId;\n\n      _this.signup(token, '/api/auth/google/');\n    };\n\n    _this.state = {\n      redirect: false\n    };\n    return _this;\n  }\n\n  _createClass(Googlelogin, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.isLoggedIn) {\n        this.setState({\n          redirect: true\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.state;\n\n      if (value.redirect) {\n        var to = {\n          pathname: '/'\n        };\n        return React.createElement(Redirect, {\n          to: to,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(GoogleLogin, {\n        clientId: \"1040550554735-0lfo665jrpgkprjkqdvh9njlc46mu6rg.apps.googleusercontent.com\",\n        redirectUri: \"/\",\n        onSuccess: this.googleResponse,\n        onFailure: this.googleResponse,\n        className: \"google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-google-plus  icon-with-margin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"raised-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" Google\")), \"\\xA0\");\n    }\n  }]);\n\n  return Googlelogin;\n}(PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    loading: state.user.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    loading: state.user.loading\n  };\n};\n\nGooglelogin.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  googleLoginUser: PropTypes.func.isRequired\n};\nexport { Googlelogin as GoogleTest };\nexport default connect(mapStateToProps)(Googlelogin);","map":{"version":3,"sources":["/Users/kakaireemmanuel/Documents/projects/React/ah-frontend-targaryen/src/components/login/Google.js"],"names":["React","PureComponent","Redirect","connect","GoogleLogin","PropTypes","googleLoginUser","Googlelogin","props","signup","userToken","serviceProvider","userData","user","access_token","googleResponse","response","token","tokenId","state","redirect","nextProps","isLoggedIn","setState","value","to","pathname","mapStateToProps","loading","mapDispatchToProps","dispatch","propTypes","bool","isRequired","func","GoogleTest"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport GoogleLogin from 'react-google-login';\nimport PropTypes from 'prop-types';\n\nimport { googleLoginUser } from '../../actions/userActions';\n\nclass Googlelogin extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      redirect: false,\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.isLoggedIn) {\n      this.setState({\n        redirect: true,\n      });\n    }\n  }\n\n  signup = (userToken, serviceProvider) => {\n    let userData;\n    if (serviceProvider === '/api/auth/google/') {\n      userData = {\n        user: {\n          access_token: userToken,\n        },\n      };\n    }\n\n    const { googleLoginUser } = this.props;\n    // console.log(loginUser(serviceProvider, userData));\n    googleLoginUser(serviceProvider, userData);\n  }\n\n  googleResponse = (response) => {\n    const token = response.tokenId;\n    this.signup(token, '/api/auth/google/');\n  }\n\n  render() {\n    const value = this.state;\n    if (value.redirect) {\n      const to = { pathname: '/' };\n      return (\n        <Redirect to={to} />\n      );\n    }\n    return (\n      <div>\n        <GoogleLogin\n          clientId=\"1040550554735-0lfo665jrpgkprjkqdvh9njlc46mu6rg.apps.googleusercontent.com\"\n          redirectUri=\"/\"\n          onSuccess={this.googleResponse}\n          onFailure={this.googleResponse}\n          className=\"google\"\n        >\n          <i className=\"fa fa-google-plus  icon-with-margin\" />\n          <span className=\"raised-font\"> Google</span>\n\n        </GoogleLogin>\n        &nbsp;\n\n      </div>\n\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.user.isLoggedIn,\n  loading: state.user.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  isLoggedIn: state.user.isLoggedIn,\n  loading: state.user.loading,\n});\n\nGooglelogin.propTypes = {\n  isLoggedIn: PropTypes.bool.isRequired,\n  googleLoginUser: PropTypes.func.isRequired,\n};\n\nexport { Googlelogin as GoogleTest };\nexport default connect(mapStateToProps)(Googlelogin);\n"]},"metadata":{},"sourceType":"module"}